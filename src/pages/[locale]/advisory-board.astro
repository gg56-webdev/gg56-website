---
import * as translations from "@/i18n";
import Layout from "@/layouts/Layout.astro";
import { getLocaleParams } from "@/utils";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import { internationalOrder, localOrder } from "@/content/people";
import { getIconNameFromUrl } from "@/utils";
import { Icon } from "astro-icon/components";
import DefaultHero from "@/components/DefaultHero.astro";

export function getStaticPaths() {
  return getLocaleParams();
}

const { currentLocale } = Astro;

const people = (await getCollection("people")).filter(({ id }, _, arr) => {
  const [locale, name] = id.split("/");
  // Only include the document if:
  // - It's 'en' (fallback) and there is no translation for current locale
  // - Or it's the current locale
  if (locale === currentLocale) return true;
  if (locale === "en") {
    // Check if a translation exists for this name in the current locale
    return !arr.some(({ id: otherId }) => {
      const [otherLocale, otherName] = otherId.split("/");
      return otherLocale === currentLocale && otherName === name;
    });
  }
  return false;
});

const international = people
  .filter(({ data: { groups } }) => groups.includes("international"))
  .sort((a, b) => {
    const nameA = a.id.split("/")[1];
    const nameB = b.id.split("/")[1];
    return (
      internationalOrder[nameA as keyof typeof internationalOrder] -
      internationalOrder[nameB as keyof typeof internationalOrder]
    );
  });

const t =
  translations[currentLocale as keyof typeof translations] || translations.en;
---

<Layout title={t.page["advisory-board"]}>
  <DefaultHero title={t["advisory-board"].h1} />
  <div class="grid gap-24 py-12 md:gap-32 md:py-24">
    <section
      id="about"
      aria-labelledby="about-title"
      class="prose md:prose-lg mx-auto max-w-(--breakpoint-md) px-4 md:text-center"
    >
      <h2 id="about-title">
        {t["advisory-board"].about.h2}
      </h2>
      <p>
        {t["advisory-board"].about.p}
      </p>
    </section>
    <section
      id="international"
      aria-labelledby="international-title"
      class="mx-auto w-full max-w-(--breakpoint-lg) px-4"
    >
      <div class="prose md:prose-lg border-primary max-w-none border-b pb-4">
        <h2 id="international-title">
          {t["advisory-board"].international.h2}
        </h2>
        <p>
          GG56이 추구하는 Global Good의 가치를 함께하시는 글로벌 자문위원
          입니다.<br />Global의 공동적인 가치와 이익을 위하여 소중한 의견을
          제시하여 주십니다.
        </p>
      </div>
      <ul id="international-list" class="mt-4 grid gap-8 md:grid-cols-2">
        {
          international.map(({ data, rendered }) => {
            return (
              <li class="@container">
                <button
                  aria-haspopup="dialog"
                  title={`Learn more about ${data.name}`}
                  aria-controls="details-dialog"
                  class="rounded-box hover:bg-base-200 grid h-full w-full appearance-none gap-4 p-6 text-left shadow-md transition-colors hover:cursor-pointer @sm:grid-cols-[auto_1fr]"
                >
                  <Image
                    src={data.photo}
                    alt=""
                    class="w-[100px] rounded-full shadow-md"
                  />
                  <div>
                    <h3 class="text-lg font-bold">
                      {data.name}{" "}
                      {data.country && (
                        <span class="text-sm">({data.country})</span>
                      )}
                    </h3>
                    <ul class="mt-2 list-disc ps-4 text-xs">
                      {data.positions?.map((position) => (
                        <li>{position}</li>
                      ))}
                    </ul>
                    {/* Fix due to this issue https://github.com/natemoo-re/astro-icon/issues/273 */}
                    {data.socials && data.socials.length > 0 && (
                      <div class="hidden">
                        {data.socials.map((href) => (
                          <Icon name={getIconNameFromUrl(href)} />
                        ))}
                      </div>
                    )}
                  </div>

                  <template>
                    <div class="grid gap-4 md:grid-cols-[1fr_3fr]">
                      <div class="md:border-base-300 px-4 text-center md:border-e">
                        <Image
                          src={data.photo}
                          alt=""
                          class="mx-auto rounded-full shadow-md"
                        />
                        <div class="mt-2 font-bold">{data.name}</div>
                        {data.socials && data.socials.length > 0 && (
                          <div class="mt-2 flex justify-center gap-2">
                            {data.socials.map((href) => (
                              <a
                                {href}
                                target="_blank"
                                rel="noopener noreferrer"
                                class="btn btn-sm btn-info btn-circle btn-outline"
                                aria-label={`Learn more about ${data.name}`}
                              >
                                <Icon
                                  name={getIconNameFromUrl(href)}
                                  size={16}
                                />
                              </a>
                            ))}
                          </div>
                        )}
                      </div>
                      <div class="prose prose-sm max-w-none">
                        <ul class="text-base-content font-medium">
                          {data.positions?.map((position) => (
                            <li>{position}</li>
                          ))}
                        </ul>
                        <Fragment set:html={rendered?.html} />
                      </div>
                    </div>
                  </template>
                </button>
              </li>
            );
          })
        }
      </ul>
    </section>

    <dialog id="details-dialog" class="modal">
      <div class="modal-box w-11/12 max-w-5xl">
        <form method="dialog">
          <button
            class="btn btn-sm btn-circle btn-ghost absolute top-2 right-2"
          >
            <span class="sr-only">close</span>
            <Icon size={20} name="lucide:x" />
          </button>
        </form>
        <div id="details-content"></div>
      </div>
      <form method="dialog" class="modal-backdrop">
        <button>close</button>
      </form>
    </dialog>
  </div>
</Layout>

<script>
  const $internationalList = document.querySelectorAll<HTMLButtonElement>(
    "#international-list > li > button",
  );
  const $detailsDialog = document.getElementById(
    "details-dialog",
  ) as HTMLDialogElement;
  const $detailsContent = $detailsDialog.querySelector(
    "#details-content",
  ) as HTMLDivElement;

  $internationalList.forEach(($item) => {
    const $template = $item.querySelector("template");
    if ($template) {
      $item.addEventListener("click", () => {
        $detailsContent.replaceChildren($template.content.cloneNode(true));
        $detailsDialog.showModal();
      });
    }

    $item.querySelectorAll("a").forEach(($link) => {
      $link.addEventListener("click", (event) => {
        event.stopPropagation();
      });
    });
  });
</script>
